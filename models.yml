definitions:
  CauseType:
    description: |-
      CauseType is a machine readable value providing more detail about what
      occurred in a status response. An operation may have multiple causes for a
      status (whether Failure or Success).
    type: string
    x-go-package: github.com/grantr/k8s-source/vendor/k8s.io/apimachinery/pkg/apis/meta/v1
  Initializer:
    properties:
      name:
        description: name of the process that is responsible for initializing this
          object.
        type: string
        x-go-name: Name
    title: Initializer is information about an initializer that has not yet completed.
    type: object
    x-go-package: github.com/grantr/k8s-source/vendor/k8s.io/apimachinery/pkg/apis/meta/v1
  Initializers:
    properties:
      pending:
        description: |-
          Pending is a list of initializers that must execute in order before this object is visible.
          When the last pending initializer is removed, and no failing result is set, the initializers
          struct will be set to nil and the object is considered as initialized and visible to all
          clients.
          +patchMergeKey=name
          +patchStrategy=merge
        items:
          $ref: '#/definitions/Initializer'
        type: array
        x-go-name: Pending
      result:
        $ref: '#/definitions/Status'
    title: Initializers tracks the progress of initialization.
    type: object
    x-go-package: github.com/grantr/k8s-source/vendor/k8s.io/apimachinery/pkg/apis/meta/v1
  KubernetesEventSource:
    description: |-
      KubernetesEventSource is the Schema for the kuberneteseventsources API
      +k8s:openapi-gen=true
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
        x-go-name: Annotations
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
        x-go-name: APIVersion
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
          +optional
        type: string
        x-go-name: ClusterName
      creationTimestamp:
        $ref: '#/definitions/Time'
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        format: int64
        type: integer
        x-go-name: DeletionGracePeriodSeconds
      deletionTimestamp:
        $ref: '#/definitions/Time'
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
        x-go-name: Finalizers
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
        x-go-name: GenerateName
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        format: int64
        type: integer
        x-go-name: Generation
      initializers:
        $ref: '#/definitions/Initializers'
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
        x-go-name: Kind
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
        x-go-name: Labels
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
        x-go-name: Name
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
        x-go-name: Namespace
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/OwnerReference'
        type: array
        x-go-name: OwnerReferences
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
        x-go-name: ResourceVersion
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
        x-go-name: SelfLink
      spec:
        $ref: '#/definitions/KubernetesEventSourceSpec'
      status:
        $ref: '#/definitions/KubernetesEventSourceStatus'
      uid:
        $ref: '#/definitions/UID'
    type: object
    x-go-package: github.com/grantr/k8s-source/pkg/apis/sources/v1alpha1
  KubernetesEventSourceSpec:
    properties:
      foo:
        type: string
        x-go-name: Foo
    type: object
    x-go-package: github.com/grantr/k8s-source/pkg/apis/sources/v1alpha1
  KubernetesEventSourceStatus:
    type: object
    x-go-package: github.com/grantr/k8s-source/pkg/apis/sources/v1alpha1
  OwnerReference:
    description: |-
      OwnerReference contains enough information to let you identify an owning
      object. An owning object must be in the same namespace as the dependent, or
      be cluster-scoped, so there is no namespace field.
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
        x-go-name: APIVersion
      blockOwnerDeletion:
        description: |-
          If true, AND if the owner has the "foregroundDeletion" finalizer, then
          the owner cannot be deleted from the key-value store until this
          reference is removed.
          Defaults to false.
          To set this field, a user needs "delete" permission of the owner,
          otherwise 422 (Unprocessable Entity) will be returned.
          +optional
        type: boolean
        x-go-name: BlockOwnerDeletion
      controller:
        description: |-
          If true, this reference points to the managing controller.
          +optional
        type: boolean
        x-go-name: Controller
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
        type: string
        x-go-name: Kind
      name:
        description: |-
          Name of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
        type: string
        x-go-name: Name
      uid:
        $ref: '#/definitions/UID'
    type: object
    x-go-package: github.com/grantr/k8s-source/vendor/k8s.io/apimachinery/pkg/apis/meta/v1
  Status:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
        x-go-name: APIVersion
      code:
        description: |-
          Suggested HTTP return code for this status, 0 if not set.
          +optional
        format: int32
        type: integer
        x-go-name: Code
      continue:
        description: |-
          continue may be set if the user set a limit on the number of items returned, and indicates that
          the server has more data available. The value is opaque and may be used to issue another request
          to the endpoint that served this list to retrieve the next set of available objects. Continuing a
          consistent list may not be possible if the server configuration has changed or more than a few
          minutes have passed. The resourceVersion field returned when using this continue value will be
          identical to the value in the first response, unless you have received this token from an error
          message.
        type: string
        x-go-name: Continue
      details:
        $ref: '#/definitions/StatusDetails'
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
        x-go-name: Kind
      message:
        description: |-
          A human-readable description of the status of this operation.
          +optional
        type: string
        x-go-name: Message
      reason:
        $ref: '#/definitions/StatusReason'
      resourceVersion:
        description: |-
          String that identifies the server's internal version of this object that
          can be used by clients to determine when objects have changed.
          Value must be treated as opaque by clients and passed unmodified back to the server.
          Populated by the system.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
        x-go-name: ResourceVersion
      selfLink:
        description: |-
          selfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
        x-go-name: SelfLink
      status:
        description: |-
          Status of the operation.
          One of: "Success" or "Failure".
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
          +optional
        type: string
        x-go-name: Status
    title: Status is a return value for calls that don't return other objects.
    type: object
    x-go-package: github.com/grantr/k8s-source/vendor/k8s.io/apimachinery/pkg/apis/meta/v1
  StatusCause:
    description: |-
      StatusCause provides more information about an api.Status failure, including
      cases when multiple errors are encountered.
    properties:
      field:
        description: |-
          The field of the resource that has caused this error, as named by its JSON
          serialization. May include dot and postfix notation for nested attributes.
          Arrays are zero-indexed.  Fields may appear more than once in an array of
          causes due to fields having multiple errors.
          Optional.

          Examples:
          "name" - the field "name" on the current resource
          "items[0].name" - the field "name" on the first array entry in "items"
          +optional
        type: string
        x-go-name: Field
      message:
        description: |-
          A human-readable description of the cause of the error.  This field may be
          presented as-is to a reader.
          +optional
        type: string
        x-go-name: Message
      reason:
        $ref: '#/definitions/CauseType'
    type: object
    x-go-package: github.com/grantr/k8s-source/vendor/k8s.io/apimachinery/pkg/apis/meta/v1
  StatusDetails:
    description: |-
      StatusDetails is a set of additional properties that MAY be set by the
      server to provide additional information about a response. The Reason
      field of a Status object defines what attributes will be set. Clients
      must ignore fields that do not match the defined type of each attribute,
      and should assume that any attribute may be empty, invalid, or under
      defined.
    properties:
      causes:
        description: |-
          The Causes array includes more details associated with the StatusReason
          failure. Not all StatusReasons may provide detailed causes.
          +optional
        items:
          $ref: '#/definitions/StatusCause'
        type: array
        x-go-name: Causes
      group:
        description: |-
          The group attribute of the resource associated with the status StatusReason.
          +optional
        type: string
        x-go-name: Group
      kind:
        description: |-
          The kind attribute of the resource associated with the status StatusReason.
          On some operations may differ from the requested resource Kind.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
        x-go-name: Kind
      name:
        description: |-
          The name attribute of the resource associated with the status StatusReason
          (when there is a single name which can be described).
          +optional
        type: string
        x-go-name: Name
      retryAfterSeconds:
        description: |-
          If specified, the time in seconds before the operation should be retried. Some errors may indicate
          the client must take an alternate action - for those errors this field may indicate how long to wait
          before taking the alternate action.
          +optional
        format: int32
        type: integer
        x-go-name: RetryAfterSeconds
      uid:
        $ref: '#/definitions/UID'
    type: object
    x-go-package: github.com/grantr/k8s-source/vendor/k8s.io/apimachinery/pkg/apis/meta/v1
  StatusReason:
    description: |-
      StatusReason is an enumeration of possible failure causes.  Each StatusReason
      must map to a single HTTP status code, but multiple reasons may map
      to the same HTTP status code.
      TODO: move to apiserver
    type: string
    x-go-package: github.com/grantr/k8s-source/vendor/k8s.io/apimachinery/pkg/apis/meta/v1
  Time:
    description: |-
      +protobuf.options.marshal=false
      +protobuf.as=Timestamp
      +protobuf.options.(gogoproto.goproto_stringer)=false
    title: |-
      Time is a wrapper around time.Time which supports correct
      marshaling to YAML and JSON.  Wrappers are provided for many
      of the factory methods that the time package offers.
    type: object
    x-go-package: github.com/grantr/k8s-source/vendor/k8s.io/apimachinery/pkg/apis/meta/v1
  UID:
    description: |-
      UID is a type that holds unique ID values, including UUIDs.  Because we
      don't ONLY use UUIDs, this is an alias to string.  Being a type captures
      intent and helps make sure that UIDs and names do not get conflated.
    type: string
    x-go-package: github.com/grantr/k8s-source/vendor/k8s.io/apimachinery/pkg/types
paths: {}
swagger: "2.0"
