// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// FinalizeHookOKCode is the HTTP code returned for type FinalizeHookOK
const FinalizeHookOKCode int = 200

/*FinalizeHookOK OK

swagger:response finalizeHookOK
*/
type FinalizeHookOK struct {

	/*
	  In: Body
	*/
	Payload *FinalizeHookOKBody `json:"body,omitempty"`
}

// NewFinalizeHookOK creates FinalizeHookOK with default headers values
func NewFinalizeHookOK() *FinalizeHookOK {

	return &FinalizeHookOK{}
}

// WithPayload adds the payload to the finalize hook o k response
func (o *FinalizeHookOK) WithPayload(payload *FinalizeHookOKBody) *FinalizeHookOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the finalize hook o k response
func (o *FinalizeHookOK) SetPayload(payload *FinalizeHookOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FinalizeHookOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*FinalizeHookDefault error

swagger:response finalizeHookDefault
*/
type FinalizeHookDefault struct {
	_statusCode int
}

// NewFinalizeHookDefault creates FinalizeHookDefault with default headers values
func NewFinalizeHookDefault(code int) *FinalizeHookDefault {
	if code <= 0 {
		code = 500
	}

	return &FinalizeHookDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the finalize hook default response
func (o *FinalizeHookDefault) WithStatusCode(code int) *FinalizeHookDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the finalize hook default response
func (o *FinalizeHookDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *FinalizeHookDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}
